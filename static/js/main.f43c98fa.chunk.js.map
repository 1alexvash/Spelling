{"version":3,"sources":["images/trophy.png","images/micro.png","sounds/A.mp3","sounds/B.mp3","sounds/C.mp3","sounds/D.mp3","sounds/E.mp3","sounds/F.mp3","sounds/G.mp3","sounds/H.mp3","sounds/I.mp3","sounds/J.mp3","sounds/K.mp3","sounds/L.mp3","sounds/M.mp3","sounds/N.mp3","sounds/O.mp3","sounds/P.mp3","sounds/Q.mp3","sounds/R.mp3","sounds/S.mp3","sounds/T.mp3","sounds/U.mp3","sounds/V.mp3","sounds/W.mp3","sounds/X.mp3","sounds/Y.mp3","sounds/Z.mp3","sounds/good.mp3","sounds/bad.mp3","images/sound-on.png","images/sound-off.png","components/Trophy.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Trophy","useStoreState","state","points","levels","currentLevel","nextLevel","className","src","trophyImg","alt","title","style","width","pointsForLevelUp","getProgress","store","createStore","difficulty","localStorage","JSON","parse","setPoints","action","payload","i","length","getActions","sounds","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","good","bad","App","useState","getRandomWord","randomWord","setRandomWord","inputWord","setInputWord","sound","setSound","useStoreActions","actions","speed","listenAnimate","setListenAnimate","input","useRef","random","Math","floor","topWords","playSound","melody","console","log","audio","Audio","currentTime","play","Sounds","soundOn","onClick","soundOff","listenButton","microImg","fullWord","current","focus","setTimeout","index","toUpperCase","listen","tipComponent","boxesComponent","split","map","letter","key","inputComponent","type","autoFocus","placeholder","onChange","e","target","value","substring","typing","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f43c98fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.32addfe9.png\";","module.exports = __webpack_public_path__ + \"static/media/micro.92c4d63a.png\";","module.exports = __webpack_public_path__ + \"static/media/A.ff541c8e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/B.070fb7af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/C.86deaf5b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/D.0326ccac.mp3\";","module.exports = __webpack_public_path__ + \"static/media/E.c843fe2f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/F.ebb380fb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/G.835f7bc1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/H.25ea92be.mp3\";","module.exports = __webpack_public_path__ + \"static/media/I.caa12343.mp3\";","module.exports = __webpack_public_path__ + \"static/media/J.22baf8de.mp3\";","module.exports = __webpack_public_path__ + \"static/media/K.31242e5e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/L.a99ce496.mp3\";","module.exports = __webpack_public_path__ + \"static/media/M.dee4e07c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/N.906499f4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/O.8b7d7d1c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/P.5fbcc255.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Q.1e30e083.mp3\";","module.exports = __webpack_public_path__ + \"static/media/R.de4009c4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/S.4085456d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/T.067c36fc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/U.5f6ea3cc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/V.f7dbd3ef.mp3\";","module.exports = __webpack_public_path__ + \"static/media/W.ae7758cf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/X.11405126.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Y.f5d933d8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Z.2348c7dd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/good.f644be27.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bad.363f9d94.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound-on.cf92d4d9.png\";","module.exports = __webpack_public_path__ + \"static/media/sound-off.e83a84d4.png\";","import React from \"react\";\r\n\r\nimport trophyImg from \"../images/trophy.png\";\r\n\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nconst Trophy = () => {\r\n  const { points, levels, currentLevel, nextLevel } = useStoreState(\r\n    (state) => state\r\n  );\r\n\r\n  function getProgress() {\r\n    const pointsForLevelUp = levels[nextLevel] - levels[currentLevel];\r\n    const levelPoints = points - levels[currentLevel];\r\n    return (levelPoints / pointsForLevelUp) * 100 + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"trophy\">\r\n      <img src={trophyImg} alt=\"\" />\r\n      <div className=\"level\" title=\"Current level:\">\r\n        {currentLevel + 1}\r\n      </div>\r\n      <div className=\"bar\">\r\n        <div className=\"progress\" style={{ width: getProgress() }}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trophy;\r\n","import { createStore, action } from \"easy-peasy\";\r\n\r\nconst store = createStore({\r\n  levels: [0, 10, 20, 50, 75, 100, 150, 200, 300, 500],\r\n  difficulty: [2000, 1800, 1600, 1400, 1200, 1000, 800, 700, 500, 500],\r\n  points: localStorage.points ? JSON.parse(localStorage.points) : 0,\r\n  currentLevel: null,\r\n  nextLevel: null,\r\n  setPoints: action((state, payload) => {\r\n    // prevent user from downgrading\r\n    if (payload > 0) {\r\n      state.points += payload;\r\n      localStorage.points = state.points;\r\n    } else {\r\n      if (state.points + payload < state.levels[state.currentLevel]) {\r\n        return \"\";\r\n      } else {\r\n        state.points += payload;\r\n        localStorage.points = state.points;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < state.levels.length; i++) {\r\n      if (state.points >= state.levels[i]) {\r\n        state.currentLevel = i;\r\n        state.nextLevel = state.currentLevel + 1;\r\n      }\r\n    }\r\n  }),\r\n});\r\n\r\n// Trigger calculation of the current level\r\nstore.getActions().setPoints(0);\r\n\r\nexport default store;\r\n","import React, { useState, useRef } from \"react\";\n\nimport \"./scss/main.css\";\n\nimport Trophy from \"./components/Trophy\";\n\nimport microImg from \"./images/micro.png\";\n\nimport topWords from \"./data/words_3000.json\";\n\n// import number_0 from \"./sounds/number_0.mp3\";\n// import number_1 from \"./sounds/number_1.mp3\";\n// import number_2 from \"./sounds/number_2.mp3\";\n// import number_3 from \"./sounds/number_3.mp3\";\n// import number_4 from \"./sounds/number_4.mp3\";\n// import number_5 from \"./sounds/number_5.mp3\";\n// import number_6 from \"./sounds/number_6.mp3\";\n// import number_7 from \"./sounds/number_7.mp3\";\n// import number_8 from \"./sounds/number_8.mp3\";\n// import number_9 from \"./sounds/number_9.mp3\";\n\nimport A from \"./sounds/A.mp3\";\nimport B from \"./sounds/B.mp3\";\nimport C from \"./sounds/C.mp3\";\nimport D from \"./sounds/D.mp3\";\nimport E from \"./sounds/E.mp3\";\nimport F from \"./sounds/F.mp3\";\nimport G from \"./sounds/G.mp3\";\nimport H from \"./sounds/H.mp3\";\nimport I from \"./sounds/I.mp3\";\nimport J from \"./sounds/J.mp3\";\nimport K from \"./sounds/K.mp3\";\nimport L from \"./sounds/L.mp3\";\nimport M from \"./sounds/M.mp3\";\nimport N from \"./sounds/N.mp3\";\nimport O from \"./sounds/O.mp3\";\nimport P from \"./sounds/P.mp3\";\nimport Q from \"./sounds/Q.mp3\";\nimport R from \"./sounds/R.mp3\";\nimport S from \"./sounds/S.mp3\";\nimport T from \"./sounds/T.mp3\";\nimport U from \"./sounds/U.mp3\";\nimport V from \"./sounds/V.mp3\";\nimport W from \"./sounds/W.mp3\";\nimport X from \"./sounds/X.mp3\";\nimport Y from \"./sounds/Y.mp3\";\nimport Z from \"./sounds/Z.mp3\";\n\nimport good from \"./sounds/good.mp3\";\nimport bad from \"./sounds/bad.mp3\";\n\nimport { StoreProvider, useStoreState, useStoreActions } from \"easy-peasy\";\nimport store from \"./store\";\n\nimport soundOn from \"./images/sound-on.png\";\nimport soundOff from \"./images/sound-off.png\";\n\nconst sounds = {\n  A: A,\n  B: B,\n  C: C,\n  D: D,\n  E: E,\n  F: F,\n  G: G,\n  H: H,\n  I: I,\n  J: J,\n  K: K,\n  L: L,\n  M: M,\n  N: N,\n  O: O,\n  P: P,\n  Q: Q,\n  R: R,\n  S: S,\n  T: T,\n  U: U,\n  V: V,\n  W: W,\n  X: X,\n  Y: Y,\n  Z: Z,\n  good: good,\n  bad: bad,\n};\n\nconst App = () => {\n  const [randomWord, setRandomWord] = useState(getRandomWord());\n  const [inputWord, setInputWord] = useState(\"\");\n  const [sound, setSound] = useState(\"on\");\n\n  const { difficulty, currentLevel } = useStoreState((state) => state);\n  const { setPoints } = useStoreActions((actions) => actions);\n\n  const speed = difficulty[currentLevel];\n\n  const [listenAnimate, setListenAnimate] = useState(false);\n\n  const input = useRef(\"\");\n\n  function getRandomWord() {\n    const random = Math.floor(Math.random() * topWords.length);\n    const randomWord = topWords[random];\n\n    return randomWord;\n  }\n\n  function typing(e) {\n    e.target.value = e.target.value.toUpperCase();\n    if (e.target.value === randomWord[0].toUpperCase()) {\n      setInputWord(inputWord + e.target.value);\n      setRandomWord(randomWord.substring(1));\n      e.target.value = \"\";\n      playSound(\"good\");\n      setPoints(1);\n      if (randomWord.length === 1) {\n        setTimeout(() => {\n          setPoints(5);\n          setInputWord(\"\");\n          setRandomWord(getRandomWord);\n        }, 750);\n      }\n    } else {\n      e.target.value = \"\";\n      playSound(\"bad\");\n      setPoints(-2);\n    }\n  }\n\n  function playSound(melody) {\n    if (sound === \"off\") {\n      console.log(\"sound is turned off\");\n      if (melody === \"good\" || melody === \"bad\") {\n        return;\n      }\n    }\n    const audio = new Audio(sounds[melody]);\n    audio.currentTime = 0;\n    audio.play();\n  }\n\n  function listen() {\n    // Maybe refactor the following code so I don't to use the fullWord variable\n    const fullWord = inputWord + randomWord;\n\n    if (!listenAnimate) {\n      input.current.focus();\n      setListenAnimate(true);\n      setTimeout(() => {\n        setListenAnimate(false);\n      }, speed * fullWord.length);\n    } else {\n      return;\n    }\n\n    for (let index = 0; index < fullWord.length; index++) {\n      setTimeout(() => {\n        playSound(fullWord[index].toUpperCase());\n      }, speed * index);\n    }\n  }\n\n  const Sounds = (\n    <div className=\"Sounds\">\n      {sound === \"on\" ? (\n        <img\n          src={soundOn}\n          className=\"sound-on\"\n          onClick={() => setSound(\"off\")}\n          alt=\"\"\n        />\n      ) : (\n        <img\n          src={soundOff}\n          className=\"sound-off\"\n          onClick={() => setSound(\"on\")}\n          alt=\"\"\n        />\n      )}\n    </div>\n  );\n\n  const listenButton = (\n    <img\n      src={microImg}\n      alt=\"\"\n      className={`listen ${listenAnimate ? \"animate\" : \"\"}`}\n      onClick={() => listen()}\n    />\n  );\n\n  // Maybe combine it with the previous one into a single one\n  const tipComponent = (\n    <div className={`tip ${listenAnimate ? \"animate\" : \"\"}`}>\n      Click to listen the word again\n    </div>\n  );\n\n  const boxesComponent = (\n    <div className=\"boxes\">\n      {inputWord.split(\"\").map((letter, index) => (\n        <div className=\"box active\" key={index}>\n          {letter}\n        </div>\n      ))}\n      {randomWord.split(\"\").map((letter, index) => (\n        <div className=\"box\" key={index}>\n          ?\n        </div>\n      ))}\n    </div>\n  );\n\n  const inputComponent = (\n    <input\n      type=\"text\"\n      autoFocus\n      className=\"input\"\n      placeholder=\"Start typing\"\n      onChange={(e) => typing(e)}\n      ref={input}\n    />\n  );\n\n  return (\n    <div className=\"App\">\n      <Trophy />\n      {Sounds}\n      {listenButton}\n      {tipComponent}\n      {boxesComponent}\n      {inputComponent}\n    </div>\n  );\n};\n\nexport default () => (\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}